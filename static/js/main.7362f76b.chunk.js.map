{"version":3,"sources":["componets/layouts/Nav.js","context/PokemonContext.js","componets/pages/Home.js","componets/pokemon/PokemonCard.js","context/AxiosContext.js","componets/pokemon/PokemonModel.js","componets/pages/Kanto.js","componets/pages/Johto.js","componets/pages/Hoenn.js","componets/pages/Sinnoh.js","componets/pages/Unova.js","componets/pages/Kalos.js","componets/pages/Alola.js","App.js","serviceWorker.js","index.js"],"names":["Nav","useState","isOpen","setIsOpen","className","width","height","viewBox","xmlns","d","onClick","style","outline","to","exact","activeClassName","PokemonContext","createContext","PokemonContextProvider","props","kantoPokemon","setKantoPokemon","johtoPokemon","setJohtoPokemon","hoennPokemon","setHoennPokemon","sinnohPokemon","setSinnohPokemon","unovaPokemon","setUnovaPokemon","kalosPokemon","setKalosPokemon","alolaPokemon","setAlolaPokemon","Provider","value","updatePokemon","region","list","length","getPokemon","name","map","poke","children","Home","type","placeholder","PokemonCard","pokemon","togglePopup","id","src","sprites","front_default","types","key","AxiosContext","AxiosContextProvider","useContext","setPokemonList","limit","offset","a","Axios","get","params","then","res","getPokemonDetails","data","results","url","pokemonData","newList","Promise","all","newPokemonList","PokemonModel","pokemonName","display","toggleModal","useEffect","back_default","front_shiny","back_shiny","weight","class","Kanto","modalToggle","setModalToggle","togglePokemonName","setTogglePokemonName","modalPokemonDetails","setModalPokemonDetails","getModalPokemonDetails","details","console","log","setTimeout","filter","Johto","Hoenn","Sinnoh","Unova","Kalos","Alola","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7362f76b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <nav className=\"bg-red-500 p-6\">\r\n      <div className=\"container mx-auto flex items-center justify-between flex-wrap\">\r\n        <div className=\"flex justify-between w-full lg:w-auto \">\r\n          <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\r\n            <svg\r\n              className=\"fill-current h-8 w-8 mr-2\"\r\n              width=\"54\"\r\n              height=\"54\"\r\n              viewBox=\"0 0 54 54\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path d=\"M13.5 22.1c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05zM0 38.3c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05z\" />\r\n            </svg>\r\n            <span className=\"font-semibold text-xl tracking-tight\">\r\n              Pokedex\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"block lg:hidden content-end\">\r\n            <button\r\n              onClick={() => setIsOpen(!isOpen)}\r\n              className=\"flex items-center px-3 py-2 border rounded text-white-200 border-white-400 hover:text-white-300 hover:border-white\"\r\n              style={{ outline: \"none\" }}\r\n            >\r\n              <svg\r\n                className=\"fill-current text-white h-3 w-3\"\r\n                viewBox=\"0 0 20 20\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <title>Menu</title>\r\n                <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`w-full justify-end  lg:flex lg:w-auto ${\r\n            isOpen ? \"block\" : \"hidden\"\r\n          }`}\r\n        >\r\n          <div className=\"text-md lg:flex-grow\">\r\n            <NavLink\r\n              to=\"/\"\r\n              exact\r\n              activeClassName=\"underline\"\r\n              className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4\"\r\n            >\r\n              Home\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/kanto\"\r\n              activeClassName=\"underline\"\r\n              className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4 capitalize\"\r\n            >\r\n              kanto\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/johto\"\r\n              activeClassName=\"underline\"\r\n              className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4 capitalize\"\r\n            >\r\n              Johto\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/hoenn\"\r\n              activeClassName=\"underline\"\r\n              className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4 capitalize\"\r\n            >\r\n              Hoenn\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/sinnoh\"\r\n              activeClassName=\"underline\"\r\n              className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4 capitalize\"\r\n            >\r\n              Sinnoh\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/unova\"\r\n              activeClassName=\"underline\"\r\n              className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4 capitalize\"\r\n            >\r\n              Unova\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/kalos\"\r\n              activeClassName=\"underline\"\r\n              className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4 capitalize\"\r\n            >\r\n              Kalos\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/alola\"\r\n              activeClassName=\"underline\"\r\n              className=\"block mt-4 lg:inline-block lg:mt-0 text-gray-300 hover:text-white mr-4 capitalize\"\r\n            >\r\n              Alola\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const PokemonContext = createContext();\r\n\r\nconst PokemonContextProvider = (props) => {\r\n  const [kantoPokemon, setKantoPokemon] = useState([]);\r\n  const [johtoPokemon, setJohtoPokemon] = useState([]);\r\n  const [hoennPokemon, setHoennPokemon] = useState([]);\r\n  const [sinnohPokemon, setSinnohPokemon] = useState([]);\r\n  const [unovaPokemon, setUnovaPokemon] = useState([]);\r\n  const [kalosPokemon, setKalosPokemon] = useState([]);\r\n  const [alolaPokemon, setAlolaPokemon] = useState([]);\r\n\r\n  const getPokemon = (region, name) => {\r\n    let pokemon = kantoPokemon.map((poke) => {\r\n      if (poke.name === name) {\r\n        return this;\r\n      }\r\n    });\r\n    return pokemon;\r\n  };\r\n\r\n  const updatePokemon = (region, list) => {\r\n    if (list.length > 0) {\r\n      // let newList = JSON.stringify(list);\r\n      // localStorage.setItem(\"Kanto\", newList);\r\n    }\r\n    switch (region) {\r\n      case \"Kanto\":\r\n        setKantoPokemon(list);\r\n        break;\r\n      case \"Johto\":\r\n        setJohtoPokemon(list);\r\n        break;\r\n      case \"Hoenn\":\r\n        setHoennPokemon(list);\r\n        break;\r\n      case \"Sinnoh\":\r\n        setSinnohPokemon(list);\r\n        break;\r\n      case \"Unova\":\r\n        setUnovaPokemon(list);\r\n        break;\r\n      case \"Kalos\":\r\n        setKalosPokemon(list);\r\n        break;\r\n      case \"Alola\":\r\n        setAlolaPokemon(list);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PokemonContext.Provider\r\n      value={{\r\n        kantoPokemon,\r\n        johtoPokemon,\r\n        hoennPokemon,\r\n        sinnohPokemon,\r\n        unovaPokemon,\r\n        kalosPokemon,\r\n        alolaPokemon,\r\n        updatePokemon,\r\n        getPokemon,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PokemonContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PokemonContextProvider;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div\r\n      className=\"bg-red-500 px-8 py-6 flex\"\r\n      style={{ height: \"calc(100vh - 80px)\" }}\r\n    >\r\n      <div className=\"container mx-auto self-center\">\r\n        <h1 className=\"text-5xl text-center text-gray-200\">\r\n          Search for a Pokemon\r\n        </h1>\r\n        <form className=\"w-full max-w-sm mx-auto py-5\">\r\n          <div className=\"flex items-center justify-center border-b border-b-2 border-white py-2\">\r\n            <input\r\n              className=\"appearance-none bg-transparent border-none text-lg placeholder-gray-100 w-full text-gray-100 mr-3 py-1 px-2 text-white leading-tight focus:outline-none\"\r\n              type=\"text\"\r\n              placeholder=\"Pokemon\"\r\n            />\r\n            <button\r\n              className=\"flex-shrink-0 bg-red-600 hover:text-red-500 hover:bg-white border-red-600 hover:border-gray-100 text-sm border-4 text-white py-1 px-2 rounded\"\r\n              type=\"button\"\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst PokemonCard = ({ pokemon, togglePopup }) => {\r\n  return (\r\n    <div\r\n      id={pokemon.name}\r\n      className=\"w-7/12 md:w-10/12  rounded-lg overflow-hidden shadow bg-white mx-auto card\"\r\n      onClick={() => togglePopup(pokemon.name)}\r\n    >\r\n      <div className=\"max-w-sm rounded mx-auto\">\r\n        <div className=\"px-6 py-4\">\r\n          <div className=\"font-bold text-xl mb-2 text-center\">\r\n            {pokemon.name}\r\n          </div>\r\n          <img src={pokemon.sprites.front_default} className=\"mx-auto\" />\r\n        </div>\r\n        <div className=\"px-6 py-4 flex justify-center\">\r\n          {pokemon.types.map((type) => {\r\n            return (\r\n              <span\r\n                className={`inline-block rounded-full capitalize px-3 py-1 mx-2 text-sm font-bold text-white ${type.type.name}`}\r\n                key={type.type.name}\r\n              >\r\n                {type.type.name}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React, { createContext, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\n\r\nexport const AxiosContext = createContext();\r\n\r\nfunction AxiosContextProvider(props) {\r\n  const { updatePokemon } = useContext(PokemonContext);\r\n\r\n  const setPokemonList = async (region, limit, offset) => {\r\n    await Axios.get(\"https://pokeapi.co/api/v2/pokemon/\", {\r\n      params: {\r\n        limit,\r\n        offset,\r\n      },\r\n    }).then((res) => {\r\n      getPokemonDetails(region, res.data.results);\r\n      return res.data.results;\r\n    });\r\n  };\r\n\r\n  const getPokemonDetails = async (region, list) => {\r\n    const newList = await list.map(async (pokemon) => {\r\n      const pokemonData = await Axios.get(pokemon.url).then((res) => {\r\n        return res.data;\r\n      });\r\n      return pokemonData;\r\n    });\r\n    const newPokemonList = await Promise.all(newList);\r\n    updatePokemon(region, newPokemonList);\r\n  };\r\n\r\n  return (\r\n    <AxiosContext.Provider value={{ setPokemonList }}>\r\n      {props.children}\r\n    </AxiosContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AxiosContextProvider;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { PokemonContext } from \"../../context/PokemonContext\";\r\n\r\nconst PokemonModel = ({ pokemonName, display, toggleModal, pokemon }) => {\r\n  const { getPokemon } = useContext(PokemonContext);\r\n\r\n  useEffect(() => {\r\n    getPokemon(pokemonName);\r\n  }, [pokemonName]);\r\n\r\n  return (\r\n    <div\r\n      className={`h-screen w-screen modal flex-col justify-center items-center ${\r\n        display === true ? \"fixed flex\" : \"hidden\"\r\n      } `}\r\n    >\r\n      <div\r\n        className=\"max-w-screen-md sm:max-w-screen-sm mx-8 w-full rounded shadow-lg bg-white fixed\"\r\n        onClick={() => {\r\n          toggleModal();\r\n        }}\r\n      >\r\n        <div className=\"flex border-gray-400 border-b\">\r\n          <div className=\"bg-gray-100 rounded-tl w-8/12 p-4\">\r\n            <div className=\"flex justify-center\">\r\n              <img src={pokemon.sprites.front_default} />\r\n              {pokemon.sprites.back_default !== null ? (\r\n                <img src={pokemon.sprites.back_default} />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n              <img src={pokemon.sprites.front_shiny} />\r\n              {pokemon.sprites.back_shiny !== null ? (\r\n                <img src={pokemon.sprites.back_shiny} />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"py-10 px-6 w-full self-center\">\r\n            <div className=\"font-bold text-lg capitalize pb-3 flex justify-between\">\r\n              <span className=\"text-gray-600 mx-2\">Name: </span>\r\n              <div className=\"w-4/5\">{pokemon.name}</div>\r\n            </div>\r\n            <div className=\"font-bold text-lg capitalize pb-3 flex justify-between\">\r\n              <span className=\"text-gray-600 ml-2 mr-10\">ID: </span>\r\n              <div className=\"w-4/5 pr-2\">{pokemon.id}</div>\r\n            </div>\r\n            <div className=\"font-bold text-lg capitalize pb-3 flex justify-between\">\r\n              <span className=\"text-gray-600 ml-2 mr-6 pr-1\">Type: </span>\r\n              {pokemon.types.map((type) => {\r\n                return (\r\n                  <span\r\n                    className={`inline-block capitalize px-3 text-sm font-bold text-white text-center w-full self-center ${type.type.name}`}\r\n                    key={type.type.name}\r\n                  >\r\n                    {type.type.name}\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"font-bold text-lg capitalize\">\r\n              <span className=\"text-gray-600 mx-2\">Weight:</span>\r\n              {pokemon.weight}\r\n            </div>\r\n            <button\r\n              class=\"flex-shrink-0 bg-red-600 hover:bg-red-800 border-red-600 hover:border-red-800 text-sm border-4 float-right text-white py-1 px-2 rounded\"\r\n              type=\"button\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonModel;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PokemonContext } from \"../../context/PokemonContext\";\r\nimport PokemonCard from \"../pokemon/PokemonCard\";\r\nimport { AxiosContext } from \"../../context/AxiosContext\";\r\nimport PokemonModel from \"../pokemon/PokemonModel\";\r\n\r\nconst Kanto = () => {\r\n  const { kantoPokemon } = useContext(PokemonContext);\r\n  const { setPokemonList } = useContext(AxiosContext);\r\n\r\n  const [modalToggle, setModalToggle] = useState(false);\r\n  const [togglePokemonName, setTogglePokemonName] = useState(\"\");\r\n  const [modalPokemonDetails, setModalPokemonDetails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (kantoPokemon.length < 1) {\r\n      setPokemonList(\"Kanto\", 151, 0);\r\n    }\r\n  }, [kantoPokemon]);\r\n\r\n  const togglePopup = async (name = false) => {\r\n    let details = await getModalPokemonDetails(name);\r\n    if (name !== false) {\r\n      setTogglePokemonName(name);\r\n    }\r\n    console.log(details);\r\n    setModalPokemonDetails(details);\r\n    setTimeout(() => {\r\n      setModalToggle(!modalToggle);\r\n    }, 100);\r\n  };\r\n\r\n  const getModalPokemonDetails = (name) => {\r\n    let details = kantoPokemon.filter((pokemon) => {\r\n      if (pokemon.name === name) {\r\n        return pokemon;\r\n      }\r\n    });\r\n    return details[\"0\"];\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-16 mx-auto\">\r\n      {modalToggle === false ? (\r\n        \"\"\r\n      ) : (\r\n        <PokemonModel\r\n          pokemonName={togglePokemonName}\r\n          display={modalToggle}\r\n          toggleModal={setModalToggle}\r\n          pokemon={modalPokemonDetails}\r\n        />\r\n      )}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {kantoPokemon.length > 0\r\n          ? kantoPokemon.map((pokemon) => {\r\n              return (\r\n                <PokemonCard\r\n                  pokemon={pokemon}\r\n                  key={pokemon.name}\r\n                  togglePopup={togglePopup}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Kanto;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PokemonContext } from \"../../context/PokemonContext\";\r\nimport PokemonCard from \"../pokemon/PokemonCard\";\r\nimport { AxiosContext } from \"../../context/AxiosContext\";\r\nimport PokemonModel from \"../pokemon/PokemonModel\";\r\n\r\nconst Johto = () => {\r\n  const { johtoPokemon } = useContext(PokemonContext);\r\n  const { setPokemonList } = useContext(AxiosContext);\r\n\r\n  const [modalToggle, setModalToggle] = useState(false);\r\n  const [togglePokemonName, setTogglePokemonName] = useState(\"\");\r\n  const [modalPokemonDetails, setModalPokemonDetails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (johtoPokemon.length < 1) {\r\n      setPokemonList(\"Johto\", 100, 151);\r\n    }\r\n  }, [johtoPokemon]);\r\n\r\n  const togglePopup = async (name = false) => {\r\n    let details = await getModalPokemonDetails(name);\r\n    if (name !== false) {\r\n      setTogglePokemonName(name);\r\n    }\r\n    console.log(details);\r\n    setModalPokemonDetails(details);\r\n    setTimeout(() => {\r\n      setModalToggle(!modalToggle);\r\n    }, 100);\r\n  };\r\n\r\n  const getModalPokemonDetails = (name) => {\r\n    let details = johtoPokemon.filter((pokemon) => {\r\n      if (pokemon.name === name) {\r\n        return pokemon;\r\n      }\r\n    });\r\n    return details[\"0\"];\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-16 mx-auto\">\r\n      {modalToggle === false ? (\r\n        \"\"\r\n      ) : (\r\n        <PokemonModel\r\n          pokemonName={togglePokemonName}\r\n          display={modalToggle}\r\n          toggleModal={setModalToggle}\r\n          pokemon={modalPokemonDetails}\r\n        />\r\n      )}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {johtoPokemon.length > 0\r\n          ? johtoPokemon.map((pokemon) => {\r\n              return (\r\n                <PokemonCard\r\n                  pokemon={pokemon}\r\n                  key={pokemon.name}\r\n                  togglePopup={togglePopup}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Johto;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PokemonContext } from \"../../context/PokemonContext\";\r\nimport PokemonCard from \"../pokemon/PokemonCard\";\r\nimport { AxiosContext } from \"../../context/AxiosContext\";\r\nimport PokemonModel from \"../pokemon/PokemonModel\";\r\n\r\nconst Hoenn = () => {\r\n  const { hoennPokemon } = useContext(PokemonContext);\r\n  const { setPokemonList } = useContext(AxiosContext);\r\n\r\n  const [modalToggle, setModalToggle] = useState(false);\r\n  const [togglePokemonName, setTogglePokemonName] = useState(\"\");\r\n  const [modalPokemonDetails, setModalPokemonDetails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (hoennPokemon.length < 1) {\r\n      setPokemonList(\"Hoenn\", 135, 251);\r\n    }\r\n  }, [hoennPokemon]);\r\n\r\n  const togglePopup = async (name = false) => {\r\n    let details = await getModalPokemonDetails(name);\r\n    if (name !== false) {\r\n      setTogglePokemonName(name);\r\n    }\r\n    console.log(details);\r\n    setModalPokemonDetails(details);\r\n    setTimeout(() => {\r\n      setModalToggle(!modalToggle);\r\n    }, 100);\r\n  };\r\n\r\n  const getModalPokemonDetails = (name) => {\r\n    let details = hoennPokemon.filter((pokemon) => {\r\n      if (pokemon.name === name) {\r\n        return pokemon;\r\n      }\r\n    });\r\n    return details[\"0\"];\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-16 mx-auto\">\r\n      {modalToggle === false ? (\r\n        \"\"\r\n      ) : (\r\n        <PokemonModel\r\n          pokemonName={togglePokemonName}\r\n          display={modalToggle}\r\n          toggleModal={setModalToggle}\r\n          pokemon={modalPokemonDetails}\r\n        />\r\n      )}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {hoennPokemon.length > 0\r\n          ? hoennPokemon.map((pokemon) => {\r\n              return (\r\n                <PokemonCard\r\n                  pokemon={pokemon}\r\n                  key={pokemon.name}\r\n                  togglePopup={togglePopup}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hoenn;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PokemonContext } from \"../../context/PokemonContext\";\r\nimport PokemonCard from \"../pokemon/PokemonCard\";\r\nimport { AxiosContext } from \"../../context/AxiosContext\";\r\nimport PokemonModel from \"../pokemon/PokemonModel\";\r\n\r\nconst Sinnoh = () => {\r\n  const { sinnohPokemon } = useContext(PokemonContext);\r\n  const { setPokemonList } = useContext(AxiosContext);\r\n\r\n  const [modalToggle, setModalToggle] = useState(false);\r\n  const [togglePokemonName, setTogglePokemonName] = useState(\"\");\r\n  const [modalPokemonDetails, setModalPokemonDetails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (sinnohPokemon.length < 1) {\r\n      setPokemonList(\"Sinnoh\", 107, 386);\r\n    }\r\n  }, [sinnohPokemon]);\r\n\r\n  const togglePopup = async (name = false) => {\r\n    let details = await getModalPokemonDetails(name);\r\n    if (name !== false) {\r\n      setTogglePokemonName(name);\r\n    }\r\n    console.log(details);\r\n    setModalPokemonDetails(details);\r\n    setTimeout(() => {\r\n      setModalToggle(!modalToggle);\r\n    }, 100);\r\n  };\r\n\r\n  const getModalPokemonDetails = (name) => {\r\n    let details = sinnohPokemon.filter((pokemon) => {\r\n      if (pokemon.name === name) {\r\n        return pokemon;\r\n      }\r\n    });\r\n    return details[\"0\"];\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-16 mx-auto\">\r\n      {modalToggle === false ? (\r\n        \"\"\r\n      ) : (\r\n        <PokemonModel\r\n          pokemonName={togglePokemonName}\r\n          display={modalToggle}\r\n          toggleModal={setModalToggle}\r\n          pokemon={modalPokemonDetails}\r\n        />\r\n      )}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {sinnohPokemon.length > 0\r\n          ? sinnohPokemon.map((pokemon) => {\r\n              return (\r\n                <PokemonCard\r\n                  pokemon={pokemon}\r\n                  key={pokemon.name}\r\n                  togglePopup={togglePopup}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sinnoh;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PokemonContext } from \"../../context/PokemonContext\";\r\nimport PokemonCard from \"../pokemon/PokemonCard\";\r\nimport { AxiosContext } from \"../../context/AxiosContext\";\r\nimport PokemonModel from \"../pokemon/PokemonModel\";\r\n\r\nconst Unova = () => {\r\n  const { unovaPokemon } = useContext(PokemonContext);\r\n  const { setPokemonList } = useContext(AxiosContext);\r\n\r\n  const [modalToggle, setModalToggle] = useState(false);\r\n  const [togglePokemonName, setTogglePokemonName] = useState(\"\");\r\n  const [modalPokemonDetails, setModalPokemonDetails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (unovaPokemon.length < 1) {\r\n      setPokemonList(\"Unova\", 156, 493);\r\n    }\r\n  }, [unovaPokemon]);\r\n\r\n  const togglePopup = async (name = false) => {\r\n    let details = await getModalPokemonDetails(name);\r\n    if (name !== false) {\r\n      setTogglePokemonName(name);\r\n    }\r\n    console.log(details);\r\n    setModalPokemonDetails(details);\r\n    setTimeout(() => {\r\n      setModalToggle(!modalToggle);\r\n    }, 100);\r\n  };\r\n\r\n  const getModalPokemonDetails = (name) => {\r\n    let details = unovaPokemon.filter((pokemon) => {\r\n      if (pokemon.name === name) {\r\n        return pokemon;\r\n      }\r\n    });\r\n    return details[\"0\"];\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-16 mx-auto\">\r\n      {modalToggle === false ? (\r\n        \"\"\r\n      ) : (\r\n        <PokemonModel\r\n          pokemonName={togglePokemonName}\r\n          display={modalToggle}\r\n          toggleModal={setModalToggle}\r\n          pokemon={modalPokemonDetails}\r\n        />\r\n      )}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {unovaPokemon.length > 0\r\n          ? unovaPokemon.map((pokemon) => {\r\n              return (\r\n                <PokemonCard\r\n                  pokemon={pokemon}\r\n                  key={pokemon.name}\r\n                  togglePopup={togglePopup}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Unova;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PokemonContext } from \"../../context/PokemonContext\";\r\nimport PokemonCard from \"../pokemon/PokemonCard\";\r\nimport { AxiosContext } from \"../../context/AxiosContext\";\r\nimport PokemonModel from \"../pokemon/PokemonModel\";\r\n\r\nconst Kalos = () => {\r\n  const { kalosPokemon } = useContext(PokemonContext);\r\n  const { setPokemonList } = useContext(AxiosContext);\r\n\r\n  const [modalToggle, setModalToggle] = useState(false);\r\n  const [togglePokemonName, setTogglePokemonName] = useState(\"\");\r\n  const [modalPokemonDetails, setModalPokemonDetails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (kalosPokemon.length < 1) {\r\n      setPokemonList(\"Kalos\", 151, 649);\r\n    }\r\n  }, [kalosPokemon]);\r\n\r\n  const togglePopup = async (name = false) => {\r\n    let details = await getModalPokemonDetails(name);\r\n    if (name !== false) {\r\n      setTogglePokemonName(name);\r\n    }\r\n    console.log(details);\r\n    setModalPokemonDetails(details);\r\n    setTimeout(() => {\r\n      setModalToggle(!modalToggle);\r\n    }, 100);\r\n  };\r\n\r\n  const getModalPokemonDetails = (name) => {\r\n    let details = kalosPokemon.filter((pokemon) => {\r\n      if (pokemon.name === name) {\r\n        return pokemon;\r\n      }\r\n    });\r\n    return details[\"0\"];\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-16 mx-auto\">\r\n      {modalToggle === false ? (\r\n        \"\"\r\n      ) : (\r\n        <PokemonModel\r\n          pokemonName={togglePokemonName}\r\n          display={modalToggle}\r\n          toggleModal={setModalToggle}\r\n          pokemon={modalPokemonDetails}\r\n        />\r\n      )}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {kalosPokemon.length > 0\r\n          ? kalosPokemon.map((pokemon) => {\r\n              return (\r\n                <PokemonCard\r\n                  pokemon={pokemon}\r\n                  key={pokemon.name}\r\n                  togglePopup={togglePopup}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Kalos;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PokemonContext } from \"../../context/PokemonContext\";\r\nimport PokemonCard from \"../pokemon/PokemonCard\";\r\nimport { AxiosContext } from \"../../context/AxiosContext\";\r\nimport PokemonModel from \"../pokemon/PokemonModel\";\r\n\r\nconst Alola = () => {\r\n  const { alolaPokemon } = useContext(PokemonContext);\r\n  const { setPokemonList } = useContext(AxiosContext);\r\n\r\n  const [modalToggle, setModalToggle] = useState(false);\r\n  const [togglePokemonName, setTogglePokemonName] = useState(\"\");\r\n  const [modalPokemonDetails, setModalPokemonDetails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (alolaPokemon.length < 1) {\r\n      setPokemonList(\"Alola\", 81, 721);\r\n    }\r\n  }, [alolaPokemon]);\r\n\r\n  const togglePopup = async (name = false) => {\r\n    let details = await getModalPokemonDetails(name);\r\n    if (name !== false) {\r\n      setTogglePokemonName(name);\r\n    }\r\n    console.log(details);\r\n    setModalPokemonDetails(details);\r\n    setTimeout(() => {\r\n      setModalToggle(!modalToggle);\r\n    }, 100);\r\n  };\r\n\r\n  const getModalPokemonDetails = (name) => {\r\n    let details = alolaPokemon.filter((pokemon) => {\r\n      if (pokemon.name === name) {\r\n        return pokemon;\r\n      }\r\n    });\r\n    return details[\"0\"];\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-16 mx-auto\">\r\n      {modalToggle === false ? (\r\n        \"\"\r\n      ) : (\r\n        <PokemonModel\r\n          pokemonName={togglePokemonName}\r\n          display={modalToggle}\r\n          toggleModal={setModalToggle}\r\n          pokemon={modalPokemonDetails}\r\n        />\r\n      )}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {alolaPokemon.length > 0\r\n          ? alolaPokemon.map((pokemon) => {\r\n              return (\r\n                <PokemonCard\r\n                  pokemon={pokemon}\r\n                  key={pokemon.name}\r\n                  togglePopup={togglePopup}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alola;\r\n","import React from \"react\";\nimport Nav from \"./componets/layouts/Nav\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PokemonContextProvider from \"./context/PokemonContext\";\nimport Home from \"./componets/pages/Home\";\nimport Kanto from \"./componets/pages/Kanto\";\nimport Johto from \"./componets/pages/Johto\";\nimport Hoenn from \"./componets/pages/Hoenn\";\nimport Sinnoh from \"./componets/pages/Sinnoh\";\nimport Unova from \"./componets/pages/Unova\";\nimport Kalos from \"./componets/pages/Kalos\";\nimport Alola from \"./componets/pages/Alola\";\nimport AxiosContextProvider from \"./context/AxiosContext\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <PokemonContextProvider>\n          <AxiosContextProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/kanto\" component={Kanto} />\n              <Route exact path=\"/johto\" component={Johto} />\n              <Route exact path=\"/hoenn\" component={Hoenn} />\n              <Route exact path=\"/sinnoh\" component={Sinnoh} />\n              <Route exact path=\"/unova\" component={Unova} />\n              <Route exact path=\"/kalos\" component={Kalos} />\n              <Route exact path=\"/alola\" component={Alola} />\n            </Switch>\n          </AxiosContextProvider>\n        </PokemonContextProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.css\";\nimport \"./pokemon.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}